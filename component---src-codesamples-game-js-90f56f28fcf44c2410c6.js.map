{"version":3,"sources":["webpack:///./src/codesamples/game.js"],"names":["words","length","getNoun","isNoun","noun","Math","floor","random","toUpperCase","Game","state","message","fetchHorse","console","log","durl","encodeURIComponent","$","getJSON","data","alert","contents","setRandomWord","_this","setState","render","_this2","this","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","grommet__WEBPACK_IMPORTED_MODULE_2__","grommet__WEBPACK_IMPORTED_MODULE_3__","fill","align","justify","grommet__WEBPACK_IMPORTED_MODULE_4__","target","onLeft","onRight","onDown","onUp","React","Component"],"mappings":"4LAUMA,EAAQ,CAAC,IAAK,KAEdC,EAASD,EAAMC,OAEfC,EAAU,WAGd,IAFA,IAAIC,GAAS,EACTC,EAAO,IACO,IAAXD,IACLC,EACEJ,EACEK,KAAKC,MACHD,KAAKE,UAAYN,EAAS,GACxB,KAKD,KAAOG,EAAK,GAAGI,gBAEpBL,GAAS,GAIb,OAAOC,GAOHK,sJACJC,MAAQ,CACNC,QAAST,OAGXU,WAAa,WACXC,QAAQC,IAAI,YAEZ,IAGMC,EACJ,yCACAC,mBAJA,6BAKA,cAEFH,QAAQC,IAAIC,GACZE,IAAEC,QAAQH,EAAM,SAASI,GACvBC,MAAMD,EAAKE,eAIfC,cAAgB,kBACdC,EAAKC,SAAS,CACZb,QAAST,qCAGbuB,OAAA,WAAS,IAAAC,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,MAAI,EACJC,MAAM,SACNC,QAAQ,UAERP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEC,OAAO,WACPC,OAAQ,WACNZ,EAAKF,SAAS,CACZb,QAAS,UAGb4B,QAAS,WACPb,EAAKJ,iBAEPkB,OAAQ,WACNd,EAAKd,cAEP6B,KAAM,WACJf,EAAKF,SAAS,CACZb,QAAS,SAIbiB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGL,KAAKjB,MAAMC,gBAvDP+B,IAAMC,WAgEVlC","file":"component---src-codesamples-game-js-90f56f28fcf44c2410c6.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  Box,\r\n  Keyboard,\r\n  Grommet,\r\n} from 'grommet'\r\n//import words from 'all-the-german-words'\r\nimport fetchJsonp from 'fetch-jsonp'\r\nimport $ from 'jquery'\r\n\r\nconst words = ['A', 'B']\r\n\r\nconst length = words.length\r\n\r\nconst getNoun = () => {\r\n  let isNoun = false\r\n  let noun = ''\r\n  while (isNoun === false) {\r\n    noun =\r\n      words[\r\n        Math.floor(\r\n          Math.random() * (length - 0) +\r\n            0\r\n        )\r\n      ]\r\n\r\n    if (\r\n      noun[0] === noun[0].toUpperCase()\r\n    ) {\r\n      isNoun = true\r\n    }\r\n  }\r\n\r\n  return noun\r\n}\r\n\r\nlet url =\r\n  //  'https://randomuser.me/api/?results=10'\r\n  'https://de.wiktionary.org/wiki/Pferd'\r\n\r\nclass Game extends React.Component {\r\n  state = {\r\n    message: getNoun(),\r\n  }\r\n\r\n  fetchHorse = () => {\r\n    console.log('fetching')\r\n\r\n    const curl =\r\n      'https://de.wiktionary.org' //'https://google.com'\r\n\r\n    const durl =\r\n      'http://www.whateverorigin.org/get?url=' +\r\n      encodeURIComponent(curl) +\r\n      '&callback=?'\r\n\r\n    console.log(durl)\r\n    $.getJSON(durl, function(data) {\r\n      alert(data.contents)\r\n    })\r\n  }\r\n\r\n  setRandomWord = () =>\r\n    this.setState({\r\n      message: getNoun(),\r\n    })\r\n\r\n  render() {\r\n    return (\r\n      <Grommet>\r\n        <Box\r\n          fill\r\n          align=\"center\"\r\n          justify=\"center\"\r\n        >\r\n          <Keyboard\r\n            target=\"document\"\r\n            onLeft={() => {\r\n              this.setState({\r\n                message: 'left',\r\n              })\r\n            }}\r\n            onRight={() => {\r\n              this.setRandomWord()\r\n            }}\r\n            onDown={() => {\r\n              this.fetchHorse()\r\n            }}\r\n            onUp={() => {\r\n              this.setState({\r\n                message: 'up',\r\n              })\r\n            }}\r\n          >\r\n            <Box>\r\n              {this.state.message}\r\n            </Box>\r\n          </Keyboard>\r\n        </Box>\r\n      </Grommet>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Game\r\n"],"sourceRoot":""}