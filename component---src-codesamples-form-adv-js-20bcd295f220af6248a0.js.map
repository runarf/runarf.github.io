{"version":3,"sources":["webpack:///./src/codesamples/formAdv.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./node_modules/uuid/v4.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js"],"names":["schema","Yup","shape","lots","of","name","required","quantities","typeError","min","integer","initialValues","id","__webpack_exports__","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_7__","className","formik__WEBPACK_IMPORTED_MODULE_5__","validationSchema","onSubmit","values","_ref","setSubmitting","setTimeout","alert","JSON","stringify","_ref2","isSubmitting","css","_templateObject","_templateObject2","arrayHelpers","length","map","lot","lotIndex","key","_templateObject3","quantity","quantityIndex","_templateObject4","type","onClick","push","Array","fill","uuid","disabled","$export","__webpack_require__","P","toObject","toAbsoluteIndex","toLength","module","exports","value","O","this","aLen","arguments","index","undefined","end","endPos","rng","bytesToUuid","options","buf","offset","i","rnds","random","ii","getRandomValues","crypto","bind","window","msCrypto","rnds8","Uint8Array","r","Math","byteToHex","toString","substr","bth","join"],"mappings":"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","file":"component---src-codesamples-form-adv-js-20bcd295f220af6248a0.js","sourcesContent":["import React from 'react'\nimport { Formik, Form, Field, ErrorMessage, FieldArray } from 'formik'\nimport * as Yup from 'yup'\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport uuid from 'uuid/v4'\n\nimport 'bootstrap/dist/css/bootstrap.css'\n\nconst schema = Yup.object().shape({\n  lots: Yup.array().of(\n    Yup.object().shape({\n      name: Yup.string().required('required'),\n      quantities: Yup.array().of(\n        Yup.number()\n          .typeError('must be number')\n          .min(0, 'must be positive')\n          .integer('must be integer')\n      ),\n    })\n  ),\n})\n\nconst countSizes = 3\n\nconst initialValues = {\n  lots: [\n    {\n      name: 'Test',\n      quantities: ['021111', '123', '231'],\n      id: '105d668b-0912-4bff-91b4-3aec881bb6ce',\n    },\n    {\n      name: 'sdfsd',\n      quantities: ['01', '21', '12'],\n      id: '4041e2a2-6d47-42c1-8bf1-a3084e48992f',\n    },\n  ],\n}\n\nexport default () => (\n  <div className=\"container-fluid\">\n    <h1 className=\"row\">Any place in your app</h1>\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2))\n          setSubmitting(false)\n        }, 400)\n      }}\n    >\n      {({ isSubmitting, values }) => (\n        <Form>\n          <div className=\"row\">\n            <div\n              className=\"col-3\"\n              css={css`\n                background-color: turquoise;\n              `}\n            >\n              Name of lot\n            </div>\n            <div\n              className=\"col\"\n              css={css`\n                background-color: pink;\n              `}\n            >\n              Quantities\n            </div>\n          </div>\n          <FieldArray name=\"lots\">\n            {arrayHelpers => (\n              <div>\n                {values.lots &&\n                  values.lots.length > 0 &&\n                  values.lots.map((lot, lotIndex) => (\n                    <div className=\"row\" key={lot.id}>\n                      <div\n                        className=\"col-3\"\n                        css={css`\n                          background-color: turquoise;\n                        `}\n                      >\n                        <Field name={`lots[${lotIndex}].name`} />\n                        <ErrorMessage name={`lots[${lotIndex}].name`} />\n                      </div>\n                      {lot.quantities.map((quantity, quantityIndex) => (\n                        <div\n                          className=\"col\"\n                          key={quantityIndex}\n                          css={css`\n                            background-color: pink;\n                          `}\n                        >\n                          <Field\n                            name={`lots[${lotIndex}].quantities[${quantityIndex}]`}\n                          />\n                          <ErrorMessage\n                            name={`lots[${lotIndex}].quantities[${quantityIndex}]`}\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <button\n                      type=\"button\"\n                      onClick={() =>\n                        arrayHelpers.push({\n                          name: '',\n                          quantities: Array(countSizes).fill(0),\n                          id: uuid(),\n                        })\n                      }\n                    >\n                      +\n                    </button>\n                    <button type=\"submit\" disabled={isSubmitting}>\n                      Submit\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n          </FieldArray>\n        </Form>\n      )}\n    </Formik>\n  </div>\n)\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n"],"sourceRoot":""}