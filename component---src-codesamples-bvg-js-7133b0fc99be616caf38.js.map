{"version":3,"sources":["webpack:///./src/codesamples/bvg.js"],"names":["Bvg","state","latitude","longitude","stops","getLocation","navigator","geolocation","getCurrentPosition","_ref","coords","_this","setState","getStops","_this2","this","_this$state","fetch","then","response","json","result","console","log","catch","err","getDepartures","id","index","_this3","undefined","departures","prevState","newStops","concat","render","_this4","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","grommet__WEBPACK_IMPORTED_MODULE_6__","grommet__WEBPACK_IMPORTED_MODULE_7__","justify","align","length","grommet__WEBPACK_IMPORTED_MODULE_8__","onClick","label","map","stop","key","distance","name","Object","entries","products","_ref2","departure","direction","line","moment","when","fromNow","React","Component"],"mappings":"4MASMA,sJACJC,MAAQ,CACNC,SAAU,GACVC,UAAW,GACXC,MAAO,MAGTC,YAAc,WACRC,UAAUC,aACZD,UAAUC,YAAYC,mBACpB,SAAAC,GAAgB,IAAbC,EAAaD,EAAbC,OACDC,EAAKC,SAAS,CACZV,SAAUQ,EAAOR,SACjBC,UAAWO,EAAOP,YAEpBQ,EAAKE,oDAMbA,SAAA,WAAW,IAAAC,EAAAC,KAAAC,EAILD,KAAKd,MAFPC,EAFOc,EAEPd,SACAC,EAHOa,EAGPb,UAQFc,MALE,yDAEAf,EACA,cACAC,GAECe,KAAK,SAAAC,GACJ,OAAOA,EAASC,SAEjBF,KAAK,SAAAG,GACJC,QAAQC,IACN,gBACAF,GAEFP,EAAKF,SAAS,CAAER,MAAOiB,MAExBG,MAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,QAG9BC,cAAA,SAAcC,EAAIC,GAAO,IAAAC,EAAAd,MACvBO,QAAQC,IACN,sBAAwBI,GAG1BL,QAAQC,IAAIR,KAAKd,MAAMG,MAAMwB,SAITE,IADlBf,KAAKd,MAAMG,MAAMwB,GACdG,YAkBLd,MAFS,yCAA4CU,EAA5C,eAGNT,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZQ,EAAKjB,SAAS,SAAAoB,GACZ,IAAMC,EAAQ,GAAAC,OACTF,EAAU5B,OAOf,OAJA6B,EACEL,GACAG,WAAaV,EAER,CACLjB,MAAO6B,OAIZT,MAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,KAlC1BV,KAAKH,SAAS,SAAAoB,GACZ,IAAMC,EAAQ,GAAAC,OACTF,EAAU5B,OAOf,OAJA6B,EACEL,GACAG,gBAAaD,EAER,CAAE1B,MAAO6B,QA4BtBE,OAAA,WAAS,IAAAC,EAAArB,KACCX,EAAUW,KAAKd,MAAfG,MACR,OACEiC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,QAAQ,SACRC,MAAM,UAEY,IAAjBvC,EAAMwC,QACLP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEC,QAAS/B,KAAKV,YACd0C,MAAM,qBAGVV,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGrC,EAAMwC,OAAS,GACdxC,EAAM4C,IACJ,SAACC,EAAMrB,GAAP,OACES,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKS,IAAKtB,GACRS,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEC,QAAS,kBACPV,EAAKV,cACHuB,EAAKtB,GACLC,KAIHqB,EAAKE,SAAU,IARlB,UASUF,EAAKG,KACZC,OAAOC,QACNL,EAAKM,UACLP,IACA,SAAAQ,GAGM,IAFJN,EAEIM,EAAA,GACJ,IAEE,IAHEA,EAAA,GAKF,MACE,IACAN,EACA,MAIPD,EAAKlB,YACJkB,EAAKlB,WAAWiB,IACd,SACES,EACA7B,GAFF,OAIES,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACES,IACEtB,EAEFc,QAAQ,UACRgB,UAAU,OAEVrB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAEIgB,EAAUC,WAGdrB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAEIgB,EACGE,KACAhC,IAGPU,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACGmB,IACCH,EAAUI,MACVC,yBAzKhBC,IAAMC,WAyLThE","file":"component---src-codesamples-bvg-js-7133b0fc99be616caf38.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grommet,\r\n  Text,\r\n} from 'grommet'\r\nimport moment from 'moment'\r\n\r\nclass Bvg extends React.Component {\r\n  state = {\r\n    latitude: '',\r\n    longitude: '',\r\n    stops: [],\r\n  }\r\n\r\n  getLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        ({ coords }) => {\r\n          this.setState({\r\n            latitude: coords.latitude,\r\n            longitude: coords.longitude,\r\n          })\r\n          this.getStops()\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  getStops() {\r\n    const {\r\n      latitude,\r\n      longitude,\r\n    } = this.state\r\n    const url =\r\n      'https://1.bvg.transport.rest/stations/nearby?' +\r\n      'latitude=' +\r\n      latitude +\r\n      '&longitude=' +\r\n      longitude\r\n    fetch(url)\r\n      .then(response => {\r\n        return response.json()\r\n      })\r\n      .then(result => {\r\n        console.log(\r\n          'setting stops',\r\n          result\r\n        )\r\n        this.setState({ stops: result })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  getDepartures(id, index) {\r\n    console.log(\r\n      'getting dep for id ' + id\r\n    )\r\n\r\n    console.log(this.state.stops[index])\r\n\r\n    if (\r\n      this.state.stops[index]\r\n        .departures !== undefined\r\n    ) {\r\n      this.setState(prevState => {\r\n        const newStops = [\r\n          ...prevState.stops,\r\n        ]\r\n\r\n        newStops[\r\n          index\r\n        ].departures = undefined\r\n\r\n        return { stops: newStops }\r\n      })\r\n\r\n      return\r\n    }\r\n    const url = `https://1.bvg.transport.rest/stations/${id}/departures`\r\n\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        console.log(result)\r\n        this.setState(prevState => {\r\n          const newStops = [\r\n            ...prevState.stops,\r\n          ]\r\n\r\n          newStops[\r\n            index\r\n          ].departures = result\r\n\r\n          return {\r\n            stops: newStops,\r\n          }\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  render() {\r\n    const { stops } = this.state\r\n    return (\r\n      <Grommet>\r\n        <Box\r\n          justify=\"center\"\r\n          align=\"center\"\r\n        >\r\n          {stops.length === 0 && (\r\n            <Button\r\n              onClick={this.getLocation}\r\n              label=\"Get stops nearby\"\r\n            />\r\n          )}\r\n          <Box>\r\n            {stops.length > 0 &&\r\n              stops.map(\r\n                (stop, index) => (\r\n                  <Box key={index}>\r\n                    <Button\r\n                      onClick={() =>\r\n                        this.getDepartures(\r\n                          stop.id,\r\n                          index\r\n                        )\r\n                      }\r\n                    >\r\n                      {stop.distance}{' '}\r\n                      meter: {stop.name}\r\n                      {Object.entries(\r\n                        stop.products\r\n                      ).map(\r\n                        ([\r\n                          key,\r\n                          value,\r\n                        ]) => {\r\n                          if (\r\n                            value ===\r\n                            true\r\n                          )\r\n                            return (\r\n                              ' ' +\r\n                              key +\r\n                              ' '\r\n                            )\r\n                        }\r\n                      )}\r\n                      {stop.departures &&\r\n                        stop.departures.map(\r\n                          (\r\n                            departure,\r\n                            index\r\n                          ) => (\r\n                            <Box\r\n                              key={\r\n                                index\r\n                              }\r\n                              justify=\"between\"\r\n                              direction=\"row\"\r\n                            >\r\n                              <Box>\r\n                                {\r\n                                  departure.direction\r\n                                }\r\n                              </Box>\r\n                              <Box>\r\n                                {\r\n                                  departure\r\n                                    .line\r\n                                    .id\r\n                                }\r\n                              </Box>\r\n                              <Box>\r\n                                {moment(\r\n                                  departure.when\r\n                                ).fromNow()}\r\n                              </Box>\r\n                            </Box>\r\n                          )\r\n                        )}\r\n                    </Button>\r\n                  </Box>\r\n                )\r\n              )}\r\n          </Box>\r\n        </Box>\r\n      </Grommet>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Bvg\r\n"],"sourceRoot":""}