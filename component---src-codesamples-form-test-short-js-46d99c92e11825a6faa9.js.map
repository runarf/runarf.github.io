{"version":3,"sources":["webpack:///./src/codesamples/formTestShort.js"],"names":["schema","Yup","shape","accounts","of","email","required","password","min","__webpack_exports__","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_5__","className","class","formik__WEBPACK_IMPORTED_MODULE_3__","initialValues","nickNames","validationSchema","onSubmit","values","_ref","setSubmitting","setTimeout","alert","JSON","stringify","_ref2","isSubmitting","name","arrayHelpers","map","account","index","key","type","component","onClick","remove","push","disabled"],"mappings":"iJAcMA,UAASC,WAAaC,MAAM,CAChCC,SAAUF,UAAYG,GACpBH,WAAaC,MAAM,CACjBG,MAAOJ,WACJI,MAAM,iBACNC,SAAS,YACZC,SAAUN,WACPO,IAAI,EAAG,sBACPF,SAAS,kBAIHG,EAAA,0BACbC,OAAAC,EAAA,EAAAD,CAAA,OAAKE,UAAU,mBACbF,OAAAC,EAAA,EAAAD,CAAA,MAAIG,MAAM,OAAV,yBAGAH,OAAAC,EAAA,EAAAD,CAACI,EAAA,EAAD,CACEC,cAAe,CACbZ,SAAU,CACR,CACEa,UAAW,GACXX,MAAO,cACPE,SAAU,SAIhBU,iBAAkBjB,EAClBkB,SAAU,SACRC,EADQC,GAGL,IADDC,EACCD,EADDC,cAEFC,WAAW,WACTC,MACEC,KAAKC,UACHN,EACA,KACA,IAGJE,GAAc,IACb,OAGJ,SAAAK,GAAA,IAAGC,EAAHD,EAAGC,aAAcR,EAAjBO,EAAiBP,OAAjB,OACCT,OAAAC,EAAA,EAAAD,CAACI,EAAA,EAAD,KACEJ,OAAAC,EAAA,EAAAD,CAACI,EAAA,EAAD,CAAYc,KAAK,YACd,SAAAC,GAAY,OACXnB,OAAAC,EAAA,EAAAD,CAAA,WACGS,EAAOhB,SAAS2B,IACf,SAACC,EAASC,GAAV,OACEtB,OAAAC,EAAA,EAAAD,CAAA,OACEE,UAAU,MACVqB,IAAKD,GAELtB,OAAAC,EAAA,EAAAD,CAAA,OAAKE,UAAU,OACbF,OAAAC,EAAA,EAAAD,CAACI,EAAA,EAAD,CACEoB,KAAK,QACLN,KAAI,YAAcI,EAAd,YAENtB,OAAAC,EAAA,EAAAD,CAACI,EAAA,EAAD,CACEc,KAAI,YAAcI,EAAd,UACJG,UAAU,SAGdzB,OAAAC,EAAA,EAAAD,CAAA,OAAKE,UAAU,OACbF,OAAAC,EAAA,EAAAD,CAACI,EAAA,EAAD,CACEoB,KAAK,WACLN,KAAI,YAAcI,EAAd,eAENtB,OAAAC,EAAA,EAAAD,CAACI,EAAA,EAAD,CACEc,KAAI,YAAcI,EAAd,aACJG,UAAU,SAGdzB,OAAAC,EAAA,EAAAD,CAAA,UACEE,UAAU,QACVsB,KAAK,SACLE,QAAS,kBACPP,EAAaQ,OACXL,KALN,QAcNtB,OAAAC,EAAA,EAAAD,CAAA,UACEwB,KAAK,SACLE,QAAS,kBACPP,EAAaS,KAAK,CAChBjC,MAAO,GACPE,SAAU,OALhB,KAWAG,OAAAC,EAAA,EAAAD,CAAA,UACEwB,KAAK,SACLK,SACEZ,GAHJ","file":"component---src-codesamples-form-test-short-js-46d99c92e11825a6faa9.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  Formik,\r\n  Form,\r\n  Field,\r\n  ErrorMessage,\r\n  FieldArray,\r\n} from 'formik'\r\nimport * as Yup from 'yup'\r\n/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\nconst schema = Yup.object().shape({\r\n  accounts: Yup.array().of(\r\n    Yup.object().shape({\r\n      email: Yup.string()\r\n        .email('invalid email')\r\n        .required('Required'),\r\n      password: Yup.string()\r\n        .min(6, 'too short password')\r\n        .required('Required'),\r\n    })\r\n  ),\r\n})\r\nexport default () => (\r\n  <div className=\"container-fluid\">\r\n    <h1 class=\"row\">\r\n      Any place in your app\r\n    </h1>\r\n    <Formik\r\n      initialValues={{\r\n        accounts: [\r\n          {\r\n            nickNames: [],\r\n            email: 'test@sa.com',\r\n            password: 'asa',\r\n          },\r\n        ],\r\n      }}\r\n      validationSchema={schema}\r\n      onSubmit={(\r\n        values,\r\n        { setSubmitting }\r\n      ) => {\r\n        setTimeout(() => {\r\n          alert(\r\n            JSON.stringify(\r\n              values,\r\n              null,\r\n              2\r\n            )\r\n          )\r\n          setSubmitting(false)\r\n        }, 400)\r\n      }}\r\n    >\r\n      {({ isSubmitting, values }) => (\r\n        <Form>\r\n          <FieldArray name=\"accounts\">\r\n            {arrayHelpers => (\r\n              <div>\r\n                {values.accounts.map(\r\n                  (account, index) => (\r\n                    <div\r\n                      className=\"row\"\r\n                      key={index}\r\n                    >\r\n                      <div className=\"col\">\r\n                        <Field\r\n                          type=\"email\"\r\n                          name={`accounts[${index}].email`}\r\n                        />\r\n                        <ErrorMessage\r\n                          name={`accounts[${index}].email`}\r\n                          component=\"div\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"col\">\r\n                        <Field\r\n                          type=\"password\"\r\n                          name={`accounts[${index}.password]`}\r\n                        />\r\n                        <ErrorMessage\r\n                          name={`accounts[${index}.password]`}\r\n                          component=\"div\"\r\n                        />\r\n                      </div>\r\n                      <button\r\n                        className=\"col-1\"\r\n                        type=\"button\"\r\n                        onClick={() =>\r\n                          arrayHelpers.remove(\r\n                            index\r\n                          )\r\n                        }\r\n                      >\r\n                        -\r\n                      </button>\r\n                    </div>\r\n                  )\r\n                )}\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() =>\r\n                    arrayHelpers.push({\r\n                      email: '',\r\n                      password: '',\r\n                    })\r\n                  }\r\n                >\r\n                  +\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={\r\n                    isSubmitting\r\n                  }\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            )}\r\n          </FieldArray>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  </div>\r\n)\r\n"],"sourceRoot":""}